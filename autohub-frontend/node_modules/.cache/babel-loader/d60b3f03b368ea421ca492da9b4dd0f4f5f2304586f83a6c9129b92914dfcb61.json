{"ast":null,"code":"var _jsxFileName = \"E:\\\\Porto\\\\autohub\\\\autohub-frontend\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//import axios from 'axios';\nimport { getNotifications } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    /*axios.get('http://127.0.0.1:8000/notifications/', {\r\n        headers: {\r\n            Authorization: `4f7a65231d5d80a5bd5f20a361dd95727cbb8da0`\r\n        }*/\n    getNotifications().then(response => {\n      setNotifications(response.data);\n      setLoading(false);\n    }).catch(() => {\n      setError(\"Error fetching notifications\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), notifications.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notif.message\n      }, notif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"info\",\n      children: \"No notifications available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Notifications, \"ls6/hHWCG78wyIV+SiXEolrcjz4=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","getNotifications","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","loading","setLoading","error","setError","then","response","data","catch","Loader","fileName","_jsxFileName","lineNumber","columnNumber","Message","variant","children","length","map","notif","message","id","_c","$RefreshReg$"],"sources":["E:/Porto/autohub/autohub-frontend/src/pages/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import axios from 'axios';\r\nimport { getNotifications } from \"../services/api\";\r\n\r\n\r\nconst Notifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        /*axios.get('http://127.0.0.1:8000/notifications/', {\r\n            headers: {\r\n                Authorization: `4f7a65231d5d80a5bd5f20a361dd95727cbb8da0`\r\n            }*/\r\n        getNotifications()\r\n            .then(response => {\r\n                setNotifications(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setError(\"Error fetching notifications\");\r\n                setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) return <Loader />;\r\n    if (error) return <Message variant=\"danger\">{error}</Message>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notifications</h1>\r\n            {notifications.length ? (\r\n                <ul>\r\n                    {notifications.map(notif => (\r\n                        <li key={notif.id}>{notif.message}</li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <Message variant=\"info\">No notifications available</Message>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Notifications;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;AACR;AACA;AACA;IACQE,gBAAgB,CAAC,CAAC,CACbW,IAAI,CAACC,QAAQ,IAAI;MACdN,gBAAgB,CAACM,QAAQ,CAACC,IAAI,CAAC;MAC/BL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAAC,MAAM;MACTJ,QAAQ,CAAC,8BAA8B,CAAC;MACxCF,UAAU,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA,CAACa,MAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC9B,IAAIV,KAAK,EAAE,oBAAOP,OAAA,CAACkB,OAAO;IAACC,OAAO,EAAC,QAAQ;IAAAC,QAAA,EAAEb;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;EAE7D,oBACIjB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBd,aAAa,CAACkB,MAAM,gBACjBrB,OAAA;MAAAoB,QAAA,EACKjB,aAAa,CAACmB,GAAG,CAACC,KAAK,iBACpBvB,OAAA;QAAAoB,QAAA,EAAoBG,KAAK,CAACC;MAAO,GAAxBD,KAAK,CAACE,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELjB,OAAA,CAACkB,OAAO;MAACC,OAAO,EAAC,MAAM;MAAAC,QAAA,EAAC;IAA0B;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC9D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAtCID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}